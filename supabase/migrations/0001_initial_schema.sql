-- Skema Awal untuk Aplikasi Manajemen Peternakan

-- 1. Tabel untuk Multi-Tenancy dan Autentikasi

-- Tabel Organisasi (Tenant)
create table organizations (
  id uuid not null primary key default gen_random_uuid(),
  name text not null unique,
  logo_url text,
  owner_id uuid not null references auth.users(id),
  created_at timestamptz not null default now()
);
comment on table organizations is 'Setiap baris mewakili satu tenant/organisasi.';

-- Tabel Profil Pengguna (melengkapi auth.users)
create table profiles (
  id uuid not null primary key references auth.users(id) on delete cascade,
  display_name text,
  phone text,
  updated_at timestamptz
);
comment on table profiles is 'Menyimpan data profil tambahan untuk pengguna.';

-- Tabel Keanggotaan Organisasi (Junction Table)
create table organization_members (
  id uuid not null primary key default gen_random_uuid(),
  organization_id uuid not null references organizations(id) on delete cascade,
  user_id uuid not null references auth.users(id) on delete cascade,
  role text not null default 'member', -- 'owner' or 'member'
  created_at timestamptz not null default now(),
  unique(organization_id, user_id)
);
comment on table organization_members is 'Menghubungkan pengguna ke organisasi dengan peran tertentu.';

-- Tabel Undangan
create table invites (
  id bigint generated by default as identity primary key,
  email text not null,
  organization_id uuid not null references organizations(id) on delete cascade,
  role text not null default 'member',
  status text not null default 'pending', -- 'pending', 'accepted', 'expired'
  invite_token text, -- Dikelola oleh Supabase Auth
  created_at timestamptz not null default now(),
  unique(email, organization_id)
);
comment on table invites is 'Menyimpan undangan yang tertunda untuk anggota baru.';


-- 2. Tabel untuk Manajemen Farm

-- Tabel Farm
create table farms (
  id bigint generated by default as identity primary key,
  organization_id uuid not null references organizations(id) on delete cascade,
  name text not null,
  location text not null,
  created_at timestamptz not null default now()
);
comment on table farms is 'Menyimpan data master untuk setiap peternakan.';

-- Tabel Flok (Kelompok Ayam)
create table flocks (
  id bigint generated by default as identity primary key,
  farm_id bigint not null references farms(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  name text not null,
  breed text not null,
  population int not null,
  start_date date not null,
  entry_age_days int not null,
  status text not null default 'Aktif', -- 'Aktif' or 'Selesai'
  created_at timestamptz not null default now()
);
comment on table flocks is 'Menyimpan data untuk setiap kelompok ayam dalam sebuah farm.';


-- 3. Tabel untuk Data Operasional

-- Tabel Data Produksi Harian
create table production_data (
  id bigint generated by default as identity primary key,
  flock_id bigint not null references flocks(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  date date not null,
  normal_eggs int not null default 0,
  white_eggs int not null default 0,
  cracked_eggs int not null default 0,
  normal_eggs_weight_kg numeric(10, 2) not null default 0,
  white_eggs_weight_kg numeric(10, 2) not null default 0,
  cracked_eggs_weight_kg numeric(10, 2) not null default 0,
  created_at timestamptz not null default now(),
  unique(flock_id, date)
);
comment on table production_data is 'Mencatat data produksi telur harian per flok.';

-- Tabel Konsumsi Pakan
create table feed_consumption (
  id bigint generated by default as identity primary key,
  production_data_id bigint not null references production_data(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  feed_code text not null,
  quantity_kg numeric(10, 2) not null,
  created_at timestamptz not null default now()
);
comment on table feed_consumption is 'Mencatat konsumsi pakan yang terkait dengan data produksi harian.';

-- Tabel Catatan Kesehatan
create table health_events (
  id bigint generated by default as identity primary key,
  flock_id bigint not null references flocks(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  event_type text not null, -- 'Vaksinasi', 'Pengobatan', 'Penyakit'
  description text not null,
  date date not null,
  notes text,
  created_at timestamptz not null default now()
);
comment on table health_events is 'Mencatat semua kejadian terkait kesehatan per flok.';

-- Tabel Data Timbang Berat Badan
create table body_weight_data (
  id bigint generated by default as identity primary key,
  flock_id bigint not null references flocks(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  weighing_date date not null,
  age_days int not null,
  avg_body_weight_actual numeric(10, 2) not null,
  avg_body_weight_standard numeric(10, 2),
  uniformity_percentage numeric(5, 2) not null,
  created_at timestamptz not null default now(),
  unique(flock_id, weighing_date)
);
comment on table body_weight_data is 'Menyimpan riwayat data penimbangan berat badan.';

-- Tabel Data Cek Respirasi
create table respiratory_data (
  id bigint generated by default as identity primary key,
  flock_id bigint not null references flocks(id) on delete cascade,
  organization_id uuid not null references organizations(id) on delete cascade,
  check_date date not null,
  respiratory_score int not null check (respiratory_score between 0 and 5),
  symptoms text[],
  notes text,
  created_at timestamptz not null default now(),
  unique(flock_id, check_date)
);
comment on table respiratory_data is 'Menyimpan riwayat data pengecekan sistem pernapasan.';


-- 4. Tabel untuk Inventori

-- Tabel Item Inventori
create table inventory_items (
  id bigint generated by default as identity primary key,
  organization_id uuid not null references organizations(id) on delete cascade,
  item_type text not null, -- 'PAKAN', 'VITAMIN', 'OBAT', 'VAKSIN'
  item_code text,
  name text not null,
  quantity numeric(10, 2) not null,
  unit text not null,
  created_at timestamptz not null default now()
);
comment on table inventory_items is 'Menyimpan data stok barang-barang inventori.';